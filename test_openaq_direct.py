#!/usr/bin/env python3
"""
Script para probar espec√≠ficamente la API de OpenAQ
"""
import asyncio
import os
from dotenv import load_dotenv
import sys
sys.path.append('/home/magma/Desktop/hackathon_backend')

from src.air_quality_client import AirQualityAPIClient
from src.schemas import Coordinates

async def test_openaq_api():
    """Probar la API de OpenAQ directamente"""
    load_dotenv()
    
    print("üîß PROBANDO API DE OPENAQ")
    print("=" * 50)
    
    # Verificar API key
    api_key = os.getenv("OPENAQ_API_KEY")
    print(f"üîë API Key configurada: {'‚úÖ S√≠' if api_key else '‚ùå No'}")
    if api_key:
        print(f"üîë Longitud de la key: {len(api_key)} caracteres")
    else:
        print("‚ùå ERROR: No se encontr√≥ OPENAQ_API_KEY en .env")
        return
    
    print("-" * 50)
    
    # Crear cliente
    client = AirQualityAPIClient()
    
    try:
        print("üåç Probando extracci√≥n general de EE.UU...")
        general_data = await client.get_openaq_measurements(limit=100)
        print(f"üìä Datos generales obtenidos: {len(general_data)}")
        
        if general_data:
            sample = general_data[0]
            print(f"üìç Ejemplo: {sample.parameter.value} = {sample.value} {sample.unit}")
            print(f"üìç Ubicaci√≥n: {sample.location_name or 'Sin nombre'}")
            print(f"üìç Coordenadas: ({sample.coordinates.latitude}, {sample.coordinates.longitude})")
            print(f"üìç Fecha: {sample.last_updated}")
        
        print("-" * 50)
        
        # Probar con coordenadas espec√≠ficas (Los Angeles)
        print("üå¥ Probando con coordenadas de Los Angeles...")
        la_coords = Coordinates(latitude=34.0522, longitude=-118.2437)
        la_data = await client.get_openaq_measurements(
            coordinates=la_coords, 
            radius=50000, 
            limit=50
        )
        print(f"üìä Datos de LA obtenidos: {len(la_data)}")
        
        if la_data:
            sample = la_data[0]
            print(f"üìç Ejemplo LA: {sample.parameter.value} = {sample.value} {sample.unit}")
            print(f"üìç Ubicaci√≥n: {sample.location_name or 'Sin nombre'}")
        
        print("-" * 50)
        
        # Resumen
        total_data = len(general_data) + len(la_data)
        print(f"üéØ TOTAL DE DATOS OBTENIDOS: {total_data}")
        
        if total_data > 0:
            print("‚úÖ ¬°√âXITO! La API de OpenAQ est√° funcionando correctamente")
        else:
            print("‚ö†Ô∏è  No se obtuvieron datos. Posibles causas:")
            print("   - API key inv√°lida")
            print("   - Problemas de conectividad")
            print("   - Cambios en la API de OpenAQ")
            
    except Exception as e:
        print(f"‚ùå ERROR durante la prueba: {e}")
        
    finally:
        await client.client.aclose()

if __name__ == "__main__":
    asyncio.run(test_openaq_api())